name: Convert And Publish Recipes

on:
  push:
    branches: ["main"]
  pull_request:
    paths:
      - "recipes/src/raw/**"
      - "data/**"
      - "prompts/**"
      - "scripts/**"
      - "docs/**"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  convert:
    runs-on: ubuntu-latest
    env:
      CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      IMAGE_API_KEY: ${{ secrets.IMAGE_API_KEY }}
      USE_MOCK_LLM: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN == '' && '1' || env.USE_MOCK_LLM || '0' }}
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4

      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: 依存関係セットアップ
        run: npm install

      - name: Claude Code SDK セットアップ
        run: npm install -g @anthropic-ai/claude-code
        if: env.CLAUDE_CODE_OAUTH_TOKEN != ''

      - name: プレーンテキストを中間JSONへ変換
        run: |
          mkdir -p recipes/src/original
          for file in $(find recipes/src/raw -name '*.txt' -maxdepth 1 2>/dev/null); do
            echo "Parsing $file"
            base=$(basename "$file" .txt)
            mock=""
            if [ "$USE_MOCK_LLM" = "1" ] && [ -f "fixtures/claude_responses/parse/${base}.json" ]; then
              mock="--mock fixtures/claude_responses/parse/${base}.json"
            fi
            node scripts/parse_with_llm.js --input "$file" $mock
          done

      - name: レシピ変換
        run: |
          mkdir -p recipes/out/converted assets/prompts
          for file in $(find recipes/src/original -name '*.json' -maxdepth 1 2>/dev/null); do
            echo "Transforming $file"
            base=$(basename "$file" .json)
            mock=""
            if [ "$USE_MOCK_LLM" = "1" ] && [ -f "fixtures/claude_responses/transform/${base}.json" ]; then
              mock="--mock fixtures/claude_responses/transform/${base}.json"
            fi
            node scripts/transform_with_llm.js --input "$file" $mock
          done

      - name: LLM検証
        run: |
          mkdir -p artifacts/verify
          for file in $(find recipes/out/converted -name '*.json' -maxdepth 1 2>/dev/null); do
            echo "Verifying $file"
            base=$(basename "$file" .json)
            original="recipes/src/original/${base}.json"
            if [ ! -f "$original" ]; then
              echo "Original JSON not found for $base" && exit 1
            fi
            mock=""
            if [ "$USE_MOCK_LLM" = "1" ] && [ -f "fixtures/claude_responses/verify/${base}.json" ]; then
              mock="--mock fixtures/claude_responses/verify/${base}.json"
            fi
            node scripts/verify_with_llm.js --original "$original" --converted "$file" $mock
          done

      - name: 栄養バリデーション
        run: |
          for file in $(find recipes/out/converted -name '*.json' -maxdepth 1 2>/dev/null); do
            node scripts/validate_recipe.js --converted "$file"
          done

      - name: Markdown生成
        run: |
          mkdir -p site/content/recipes
          for file in $(find recipes/out/converted -name '*.json' -maxdepth 1 2>/dev/null); do
            node scripts/build_markdown.js --input "$file"
          done

      - name: プロンプト保存
        run: |
          for file in $(find recipes/out/converted -name '*.json' -maxdepth 1 2>/dev/null); do
            base=$(basename "$file" .json)
            promptPath="assets/prompts/${base}.txt"
            jq -r '.image_prompt' "$file" > "$promptPath"
          done

      - name: 生成物をアーティファクト化
        uses: actions/upload-artifact@v4
        with:
          name: converted-recipes
          path: |
            recipes/out/converted
            site/content/recipes
            assets/prompts

  deploy-pages:
    runs-on: ubuntu-latest
    needs: convert
    if: github.event_name != 'pull_request'
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
      - name: ダミーサイトアーティファクト
        run: |
          mkdir -p public
          echo "GitHub Pages deployment placeholder" > public/index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
